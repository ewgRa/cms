<?php
	/**
	 * Generated by meta builder!
	 * Do not edit this class!
	 * @license http://www.opensource.org/licenses/bsd-license.php BSD
	 * @author Evgeniy Sokolov <ewgraf@gmail.com>
	 */
	abstract class AutoUserRight
	{
		private $id = null;
		
		private $userId = null;
		
		private $rightId = null;
		
		/**
		 * @return UserRightDA
		 */
		public static function da()
		{
			return UserRightDA::me();
		}
		
		/**
		 * @return AutoUserRight
		 */
		public function setId($id)
		{
			$this->id = $id;
			return $this;
		}
		
		public function getId()
		{
			Assert::isNotNull($this->id);
			return $this->id;
		}
		
		/**
		 * @return AutoUserRight
		 */
		public function setUserId($userId)
		{
			$this->userId = $userId;
			return $this;
		}
		
		public function getUserId()
		{
			return $this->userId;
		}
		
		/**
		 * @return AutoUserRight
		 */
		public function setUser(User $user)
		{
			$this->userId = $user->getId();
			return $this;
		}
		
		/**
		 * @return User
		 */
		public function getUser()
		{
			return User::da()->getById($this->getUserId());
		}
		
		/**
		 * @return AutoUserRight
		 */
		public function setRightId($rightId)
		{
			$this->rightId = $rightId;
			return $this;
		}
		
		public function getRightId()
		{
			return $this->rightId;
		}
		
		/**
		 * @return AutoUserRight
		 */
		public function setRight(Right $right)
		{
			$this->rightId = $right->getId();
			return $this;
		}
		
		/**
		 * @return Right
		 */
		public function getRight()
		{
			return Right::da()->getById($this->getRightId());
		}
	}
?>