<?php
	namespace ewgraCms;

	/**
	 * Generated by meta builder!
	 * Do not edit this class!
	 * @license http://www.opensource.org/licenses/bsd-license.php BSD
	 * @author Evgeniy Sokolov <ewgraf@gmail.com>
	 */
	abstract class AutoViewFile
	{
		private $id = null;

		/**
		 * @var \ewgraFramework\ContentType
		 */
		private $contentType = null;

		private $path = null;

		/**
		 * @var boolean
		 */
		private $joinable = null;

		private $sourceId = null;

		/**
		 * @var FileSource
		 */
		private $source = null;

		/**
		 * @return ViewFileDA
		 */
		public static function da()
		{
			return ViewFileDA::me();
		}

		/**
		 * @return ViewFileProto
		 */
		public static function proto()
		{
			return ViewFileProto::me();
		}

		/**
		 * @return AutoViewFile
		 */
		public function setId($id)
		{
			$this->id = $id;

			return $this;
		}

		public function getId()
		{
			\ewgraFramework\Assert::isNotNull($this->id);
			return $this->id;
		}

		public function hasId()
		{
			return ($this->id !== null);
		}

		/**
		 * @return AutoViewFile
		 */
		public function setContentType(\ewgraFramework\ContentType $contentType)
		{
			$this->contentType = $contentType;

			return $this;
		}

		/**
		 * @return \ewgraFramework\ContentType
		 */
		public function getContentType()
		{
			return $this->contentType;
		}

		/**
		 * @return AutoViewFile
		 */
		public function setPath($path)
		{
			$this->path = $path;

			return $this;
		}

		public function getPath()
		{
			return $this->path;
		}

		/**
		 * @return AutoViewFile
		 */
		public function setJoinable($joinable = true)
		{
			$this->joinable = ($joinable === null ? null : ($joinable === true));

			return $this;
		}

		/**
		 * @return boolean
		 */
		public function getJoinable()
		{
			return $this->joinable;
		}

		public function isJoinable()
		{
			return ($this->getJoinable() === true);
		}

		/**
		 * @return AutoViewFile
		 */
		public function setSourceId($sourceId)
		{
			$this->source = null;
			$this->sourceId = $sourceId;

			return $this;
		}

		public function getSourceId()
		{
			return $this->sourceId;
		}

		/**
		 * @return AutoViewFile
		 */
		public function setSource(FileSource $source)
		{
			$this->sourceId = $source->getId();
			$this->source = $source;

			return $this;
		}

		/**
		 * @return FileSource
		 */
		public function getSource()
		{
			if (!$this->source && $this->getSourceId())
				$this->source = FileSource::da()->getById($this->getSourceId());

			return $this->source;
		}
	}
?>